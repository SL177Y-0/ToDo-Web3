/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EnhancedTodoList,
  EnhancedTodoListInterface,
} from "../../../contracts/TodoList.sol/EnhancedTodoList";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TaskCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TaskCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TaskDeleted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskId",
        type: "bytes32",
      },
    ],
    name: "completeTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_category",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_priority",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_dependencies",
        type: "bytes32[]",
      },
    ],
    name: "createTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskId",
        type: "bytes32",
      },
    ],
    name: "deleteTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "includeCompleted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "includeDeleted",
        type: "bool",
      },
    ],
    name: "getFilteredTasks",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskId",
        type: "bytes32",
      },
    ],
    name: "getTask",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "category",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "priority",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "dependencies",
            type: "bytes32[]",
          },
          {
            internalType: "bool",
            name: "isCompleted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "completedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDeleted",
            type: "bool",
          },
        ],
        internalType: "struct EnhancedTodoList.Task",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "getTaskMetadata",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_taskId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "setTaskMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTasks",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004a565b506001805561009a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61123a806100a96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101505780637c0390f7146101585780638da5cb5b1461016b578063a4eb604214610186578063e64f15a214610199578063f2fde38b146101ac57600080fd5b806315a29035146100ae5780633cdd627c146100d757806348e79413146100fa57806355c261911461010f57806366873a551461012f575b600080fd5b6100c16100bc366004610e04565b6101bf565b6040516100ce9190610e58565b60405180910390f35b6100ea6100e5366004610f09565b6102f8565b60405190151581526020016100ce565b61010d610108366004610f40565b61035c565b005b61012261011d366004610f8c565b6103fc565b6040516100ce9190610fc6565b61014261013d36600461100a565b6107b4565b6040519081526020016100ce565b61010d6107e5565b61010d610166366004610e04565b6107f9565b6000546040516001600160a01b0390911681526020016100ce565b61010d61019436600461105b565b61099a565b61010d6101a7366004610e04565b610b86565b61010d6101ba366004611150565b610cbf565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a082015260c0810182905260e0810182905261010081018290526101208101919091526000828152600260208181526040928390208351610140810185528154815260018201546001600160a01b0381168285015260ff600160a01b8204811683880152600160a81b9091041660608201529281015460808401526003810180548551818502810185019096528086529394919360a08601938301828280156102b457602002820191906000526020600020905b8154815260200190600101908083116102a0575b5050509183525050600482015460ff908116151560208301526005830154604083015260068301546060830152600790920154909116151560809091015292915050565b60008281526002602052604081206001015483906001600160a01b031661033a5760405162461bcd60e51b815260040161033190611172565b60405180910390fd5b5050600091825260046020908152604080842092845291905290205460ff1690565b60008381526002602052604090206001015483906001600160a01b03166103955760405162461bcd60e51b815260040161033190611172565b60008481526002602052604090206001015484906001600160a01b031633146103d05760405162461bcd60e51b81526004016103319061119f565b505060009283526004602090815260408085209385529290529120805460ff1916911515919091179055565b6001600160a01b038316600090815260036020908152604080832080548251818502810185019093528083526060949383018282801561045b57602002820191906000526020600020905b815481526020019060010190808311610447575b505050505090506000805b82518110156105c557600060026000858481518110610487576104876111c7565b60209081029190910181015182528181019290925260409081016000208151610140810183528154815260018201546001600160a01b0381168286015260ff600160a01b8204811683860152600160a81b909104166060820152600282015460808201526003820180548451818702810187019095528085529194929360a086019390929083018282801561053b57602002820191906000526020600020905b815481526020019060010190808311610527575b5050509183525050600482015460ff90811615156020830152600583015460408301526006830154606083015260079092015490911615156080909101529050858061058a5750806101200151155b801561059f5750868061059f57508060c00151155b156105b257826105ae816111dd565b9350505b50806105bd816111dd565b915050610466565b5060008167ffffffffffffffff8111156105e1576105e1611045565b60405190808252806020026020018201604052801561060a578160200160208202803683370190505b5090506000805b84518110156107a757600060026000878481518110610632576106326111c7565b60209081029190910181015182528181019290925260409081016000208151610140810183528154815260018201546001600160a01b0381168286015260ff600160a01b8204811683860152600160a81b909104166060820152600282015460808201526003820180548451818702810187019095528085529194929360a08601939092908301828280156106e657602002820191906000526020600020905b8154815260200190600101908083116106d2575b5050509183525050600482015460ff9081161515602083015260058301546040830152600683015460608301526007909201549091161515608090910152905087806107355750806101200151155b801561074a5750888061074a57508060c00151155b1561079457858281518110610761576107616111c7565b6020026020010151848480610775906111dd565b955081518110610787576107876111c7565b6020026020010181815250505b508061079f816111dd565b915050610611565b5090979650505050505050565b600360205281600052604060002081815481106107d057600080fd5b90600052602060002001600091509150505481565b6107ed610cfd565b6107f76000610d2a565b565b60008181526002602052604090206001015481906001600160a01b03166108325760405162461bcd60e51b815260040161033190611172565b60008281526002602052604090206001015482906001600160a01b0316331461086d5760405162461bcd60e51b81526004016103319061119f565b600083815260026020526040902060070154839060ff16156108c35760405162461bcd60e51b815260206004820152600f60248201526e15185cdac81a5cc819195b195d1959608a1b6044820152606401610331565b600084815260026020526040902060040154849060ff16156109205760405162461bcd60e51b815260206004820152601660248201527515185cdac8185b1c9958591e4818dbdb5c1b195d195960521b6044820152606401610331565b610928610d7a565b6000858152600260205260409081902060048101805460ff19166001179055426006909101819055905186917f425461b244c16ff50abad00f390b37ec670910e5c1f71d0c3f4cfd35c0cadc9b9161098291815260200190565b60405180910390a261099360018055565b5050505050565b6109a2610d7a565b6000858152600260205260409020600101546001600160a01b031615610a005760405162461bcd60e51b81526020600482015260136024820152725461736b20616c72656164792065786973747360681b6044820152606401610331565b604080516101408101825286815233602080830191825260ff808916848601908152888216606086019081526080860189815260a08701898152600060c089018190524260e08a0152610100890181905261012089018190528e81526002808852999020885181559651600188018054955194518716600160a81b0260ff60a81b1995909716600160a01b026001600160a81b03199096166001600160a01b0392909216919091179490941792909216939093179091559051948301949094559251805192938493610ad89260038501920190610da4565b5060c082015160048201805491151560ff1992831617905560e083015160058301556101008301516006830155610120909201516007909101805491151591909216179055336000818152600360209081526040808320805460018101825590845291909220018890555187907f5fb74283f874d0f894d0de9c856a2a842137dc2c21c621e080065c7b797c009590610b749042815260200190565b60405180910390a35061099360018055565b60008181526002602052604090206001015481906001600160a01b0316610bbf5760405162461bcd60e51b815260040161033190611172565b60008281526002602052604090206001015482906001600160a01b03163314610bfa5760405162461bcd60e51b81526004016103319061119f565b600083815260026020526040902060070154839060ff1615610c505760405162461bcd60e51b815260206004820152600f60248201526e15185cdac81a5cc819195b195d1959608a1b6044820152606401610331565b610c58610d7a565b60008481526002602052604090819020600701805460ff191660011790555184907fdfa114c373914aee203c1c48ba1e774124da4d7125dbaf2919793b81e430cc5390610ca89042815260200190565b60405180910390a2610cb960018055565b50505050565b610cc7610cfd565b6001600160a01b038116610cf157604051631e4fbdf760e01b815260006004820152602401610331565b610cfa81610d2a565b50565b6000546001600160a01b031633146107f75760405163118cdaa760e01b8152336004820152602401610331565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610d9d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b828054828255906000526020600020908101928215610ddf579160200282015b82811115610ddf578251825591602001919060010190610dc4565b50610deb929150610def565b5090565b5b80821115610deb5760008155600101610df0565b600060208284031215610e1657600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610e4d57815187529582019590820190600101610e31565b509495945050505050565b602081528151602082015260006020830151610e7f60408401826001600160a01b03169052565b50604083015160ff8116606084015250606083015160ff8116608084015250608083015160a083015260a08301516101408060c0850152610ec4610160850183610e1d565b915060c0850151610ed960e086018215159052565b5060e085015161010085810191909152850151610120808601919091529094015115159390920192909252919050565b60008060408385031215610f1c57600080fd5b50508035926020909101359150565b80358015158114610f3b57600080fd5b919050565b600080600060608486031215610f5557600080fd5b8335925060208401359150610f6c60408501610f2b565b90509250925092565b80356001600160a01b0381168114610f3b57600080fd5b600080600060608486031215610fa157600080fd5b610faa84610f75565b9250610fb860208501610f2b565b9150610f6c60408501610f2b565b6020808252825182820181905260009190848201906040850190845b81811015610ffe57835183529284019291840191600101610fe2565b50909695505050505050565b6000806040838503121561101d57600080fd5b61102683610f75565b946020939093013593505050565b803560ff81168114610f3b57600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561107357600080fd5b853594506020611084818801611034565b945061109260408801611034565b935060608701359250608087013567ffffffffffffffff808211156110b657600080fd5b818901915089601f8301126110ca57600080fd5b8135818111156110dc576110dc611045565b8060051b604051601f19603f8301168101818110858211171561110157611101611045565b60405291825284820192508381018501918c83111561111f57600080fd5b938501935b8285101561113d57843584529385019392850192611124565b8096505050505050509295509295909350565b60006020828403121561116257600080fd5b61116b82610f75565b9392505050565b60208082526013908201527215185cdac8191bd95cc81b9bdd08195e1a5cdd606a1b604082015260600190565b6020808252600e908201526d2737ba103a30b9b59037bbb732b960911b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016111fd57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220801b55c8ece33be2d61e0b30697759b2f3c8424b25aec964225e357bf87ea16f64736f6c63430008140033";

type EnhancedTodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EnhancedTodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EnhancedTodoList__factory extends ContractFactory {
  constructor(...args: EnhancedTodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EnhancedTodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EnhancedTodoList__factory {
    return super.connect(runner) as EnhancedTodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EnhancedTodoListInterface {
    return new Interface(_abi) as EnhancedTodoListInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EnhancedTodoList {
    return new Contract(address, _abi, runner) as unknown as EnhancedTodoList;
  }
}
